/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int count = 1;
        ListNode temp = head, target = null, prev = null;

        while(temp!=null){
            if(count==n){   
                prev = target;
                if(target==null) target = head;
                else target = target.next;
            }else count++;
            temp = temp.next;
        }

        if(target!=null){
            if(prev==null){
                head = head.next;
            }
            else{
                prev.next = target.next;
            }
        }

        return head;
    }
}
